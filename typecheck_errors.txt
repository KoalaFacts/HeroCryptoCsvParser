
> @beingciteable/hero-csv-crypto-parser@0.1.3 typecheck
> tsc --noEmit

tests/tax/contract/calculateCostBasis.test.ts(22,5): error TS2739: Type '{ name: string; type: "exchange"; }' is missing the following properties from type 'DataSource': id, equals
tests/tax/contract/calculateCostBasis.test.ts(38,5): error TS2739: Type '{ name: string; type: "exchange"; }' is missing the following properties from type 'DataSource': id, equals
tests/tax/contract/classifyTransaction.test.ts(24,5): error TS2739: Type '{ name: string; type: "exchange"; }' is missing the following properties from type 'DataSource': id, equals
tests/tax/contract/getTaxOptimization.test.ts(385,89): error TS2345: Argument of type 'string' is not assignable to parameter of type '"TAX_LOSS_HARVESTING" | "CGT_DISCOUNT_TIMING" | "PERSONAL_USE_CLASSIFICATION" | "DISPOSAL_TIMING" | "LOT_SELECTION"'.
tests/tax/contract/initializeStorage.test.ts(8,3): error TS2459: Module '"@/tax/contracts/function-interfaces"' declares 'TaxEvent' locally, but it is not exported.
tests/tax/contract/initializeStorage.test.ts(23,26): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; }; taxEvents: never[]; }' to type 'Transaction' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; }; taxEvents: never[]; }' is missing the following properties from type 'SpotTrade': baseAsset, quoteAsset, side, price
tests/tax/contract/initializeStorage.test.ts(408,75): error TS2339: Property 'asset' does not exist on type 'TaxEvent'.
tests/tax/contract/validateTransactions.test.ts(22,5): error TS2739: Type '{ name: string; type: "exchange"; }' is missing the following properties from type 'DataSource': id, equals
tests/tax/contract/validateTransactions.test.ts(28,9): error TS2322: Type '"DISPOSAL"' is not assignable to type '"INCOME" | "CAPITAL_GAIN" | "CAPITAL_LOSS" | "EXPENSE"'.
tests/tax/contract/validateTransactions.test.ts(37,11): error TS2739: Type '{ symbol: string; name: string; decimals: number; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/contract/validateTransactions.test.ts(63,5): error TS2739: Type '{ name: string; type: "exchange"; }' is missing the following properties from type 'DataSource': id, equals
tests/tax/contract/validateTransactions.test.ts(74,5): error TS2739: Type '{ name: string; type: "exchange"; }' is missing the following properties from type 'DataSource': id, equals
tests/tax/contract/validateTransactions.test.ts(85,5): error TS2739: Type '{ name: string; type: "exchange"; }' is missing the following properties from type 'DataSource': id, equals
tests/tax/contract/validateTransactions.test.ts(412,48): error TS2339: Property 'asset' does not exist on type 'TaxEvent'.
tests/tax/contract/validateTransactions.test.ts(440,52): error TS2339: Property 'fiatValue' does not exist on type 'TaxEvent'.
tests/tax/integration/auTaxReport.test.ts(72,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/auTaxReport.test.ts(101,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/auTaxReport.test.ts(129,7): error TS2352: Conversion of type '{ id: string; type: "STAKING_REWARD"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; stakingProduct: string; apr: string; taxEvents: never[]; }' to type 'StakingReward' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ id: string; type: "STAKING_REWARD"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; stakingProduct: string; apr: string; taxEvents: never[]; }' is missing the following properties from type 'StakingReward': reward, staking
tests/tax/integration/auTaxReport.test.ts(149,7): error TS2352: Conversion of type '{ id: string; type: "SWAP"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; from: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; to: { ...; }; route: { ...; }; gasUsed: { ...; }; taxEvents: never[]; }' to type 'Swap' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'from.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/auTaxReport.test.ts(181,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/auTaxReport.test.ts(209,7): error TS2352: Conversion of type '{ id: string; type: "INTEREST"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; interestRate: string; period: number; taxEvents: never[]; }' to type 'Interest' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ id: string; type: "INTEREST"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; interestRate: string; period: number; taxEvents: never[]; }' is missing the following properties from type 'Interest': interest, interestType, context
tests/tax/integration/auTaxReport.test.ts(229,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "BUY"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/defiClassification.test.ts(80,7): error TS2352: Conversion of type '{ id: string; type: "LIQUIDITY_ADD"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; tokenA: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'LiquidityAdd' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ id: string; type: "LIQUIDITY_ADD"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; tokenA: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' is missing the following properties from type 'LiquidityAdd': assets, lpTokens
tests/tax/integration/defiClassification.test.ts(119,7): error TS2352: Conversion of type '{ id: string; type: "INTEREST"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; interestRate: string; period: number; protocol: { ...; }; taxEvents: never[]; }' to type 'Interest' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ id: string; type: "INTEREST"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; interestRate: string; period: number; protocol: { ...; }; taxEvents: never[]; }' is missing the following properties from type 'Interest': interest, interestType, context
tests/tax/integration/defiClassification.test.ts(144,7): error TS2352: Conversion of type '{ id: string; type: "STAKING_REWARD"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; stakingProduct: string; apr: string; governanceRights: boolean; taxEvents: neve...' to type 'StakingReward' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ id: string; type: "STAKING_REWARD"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; stakingProduct: string; apr: string; governanceRights: boolean; taxEvents: neve...' is missing the following properties from type 'StakingReward': reward, staking
tests/tax/integration/defiClassification.test.ts(165,7): error TS2352: Conversion of type '{ id: string; type: "SWAP"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; from: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; to: { ...; }; route: { ...; }; gasUsed: { ...; }; taxEvents: never[]; }' to type 'Swap' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'from.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/defiClassification.test.ts(198,7): error TS2352: Conversion of type '{ id: string; type: "SWAP"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; from: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; to: { ...; }; route: { ...; }; stakingDerivative: { ...; }; taxEvents: never[]; }' to type 'Swap' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'from.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/defiClassification.test.ts(232,7): error TS2352: Conversion of type '{ id: string; type: "LIQUIDITY_REMOVE"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; lpToken: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'LiquidityRemove' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ id: string; type: "LIQUIDITY_REMOVE"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; lpToken: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' is missing the following properties from type 'LiquidityRemove': lpTokens, assets
tests/tax/integration/defiClassification.test.ts(270,7): error TS2352: Conversion of type '{ id: string; type: "TRANSFER"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'Transfer' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'asset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/defiClassification.test.ts(301,7): error TS2352: Conversion of type '{ id: string; type: "SWAP"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; from: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; to: { ...; }; route: { ...; }; arbitrageOpportunity: { ...; }; taxEvents: never[]; }' to type 'Swap' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'from.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/defiClassification.test.ts(332,7): error TS2352: Conversion of type '{ id: string; type: "TRANSFER"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'Transfer' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'asset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/defiClassification.test.ts(364,7): error TS2352: Conversion of type '{ id: string; type: "TRANSFER"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'Transfer' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'asset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/defiClassification.test.ts(399,7): error TS2352: Conversion of type '{ id: string; type: "SWAP"; timestamp: Date; source: { name: string; type: "marketplace"; country: string; }; from: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; to: { ...; }; nft: { ...; }; fee: { ...; }; taxEvents: never[]; }' to type 'Swap' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'from.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/exportFormats.test.ts(226,9): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "BUY"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/exportFormats.test.ts(245,9): error TS2352: Conversion of type '{ id: string; type: "STAKING_REWARD"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; stakingProduct: string; apr: string; taxEvents: never[]; }' to type 'StakingReward' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ id: string; type: "STAKING_REWARD"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; stakingProduct: string; apr: string; taxEvents: never[]; }' is missing the following properties from type 'StakingReward': reward, staking
tests/tax/integration/fifoCalculation.test.ts(65,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/fifoCalculation.test.ts(93,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/fifoCalculation.test.ts(121,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/fifoCalculation.test.ts(149,7): error TS2352: Conversion of type '{ id: string; type: "AIRDROP"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; reason: string; taxEvents: never[]; }' to type 'Airdrop' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ id: string; type: "AIRDROP"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; reason: string; taxEvents: never[]; }' is missing the following properties from type 'Airdrop': received, airdrop
tests/tax/integration/fifoCalculation.test.ts(168,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/fifoCalculation.test.ts(196,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/fifoCalculation.test.ts(224,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; ... 4 more ...; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/fifoCalculation.test.ts(252,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "BUY"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/fifoCalculation.test.ts(275,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "BUY"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/fifoCalculation.test.ts(299,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "SELL"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/optimizationStrategies.test.ts(113,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "BUY"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/optimizationStrategies.test.ts(132,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "BUY"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/optimizationStrategies.test.ts(152,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "BUY"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/optimizationStrategies.test.ts(172,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "BUY"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/optimizationStrategies.test.ts(192,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "BUY"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/optimizationStrategies.test.ts(211,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "BUY"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/optimizationStrategies.test.ts(231,7): error TS2352: Conversion of type '{ id: string; type: "STAKING_REWARD"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; stakingProduct: string; apr: string; taxEvents: never[]; }' to type 'StakingReward' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ id: string; type: "STAKING_REWARD"; timestamp: Date; source: { name: string; type: "protocol"; country: string; }; asset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; stakingProduct: string; apr: string; taxEvents: never[]; }' is missing the following properties from type 'StakingReward': reward, staking
tests/tax/integration/optimizationStrategies.test.ts(247,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "SELL"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/optimizationStrategies.test.ts(267,7): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "BUY"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
tests/tax/integration/storagePerformance.test.ts(119,25): error TS2352: Conversion of type '{ id: string; type: "SPOT_TRADE"; timestamp: Date; source: { name: string; type: "exchange"; country: string; }; baseAsset: { asset: { symbol: string; name: string; }; amount: { value: string; decimals: number; }; fiatValue: { ...; }; }; quoteAsset: { ...; }; side: "BUY" | "SELL"; price: string; taxEvents: never[]; }' to type 'SpotTrade' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'baseAsset.asset' are incompatible between these types.
    Type '{ symbol: string; name: string; }' is missing the following properties from type 'Asset': equals, isStablecoin, isFiat, isUnknown
